# -*- coding: utf-8 -*-
"""Using Functions

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rXg3JIipjdfC-7w35Hu-jnAA_anXw2i4

There is a famous clothing store in a city, which has four different sub-branches under the main branch. End of each day four sub-branches should report back to the main branch about available stock in percentage.

write a python program and create four different branches and print just the available stock of each branch.
create four functions with name of your choice which should consists of one variable as total_stock, sold_stocks, available_stock and a print statement that prints the available stock value with a proper print statement
"""

def branch_one():
  total_stock = 250
  sold_stock = 52
  available_stock = total_stock - sold_stock
  available_percentage = (available_stock / total_stock) * 100

  print("Available stock in branch one is {}%".format(available_percentage))
def branch_two():
  total_stock = 400
  sold_stock = 76
  available_stock = total_stock - sold_stock
  available_percentage = (available_stock / total_stock) * 100
  print("Available stock in branch two is {}%".format(available_percentage))
def branch_three():
  total_stock = 556
  sold_stock = 122
  available_stock = total_stock - sold_stock
  available_percentage = (available_stock / total_stock) * 100
  print("Available stock in branch three is {:.2f}%".format(available_percentage))
def branch_four():
  total_stock = 600
  sold_stock = 356
  available_stock = total_stock - sold_stock
  available_percentage = (available_stock / total_stock) * 100
  print("Available stock in branch four is {:.2f}%".format(available_percentage))
def main():
  branch_one()
  branch_two()
  branch_three()
  branch_four()
main()

"""Jack, a 19 year old, has learnt python. He has written a code using python that will literally accept color names as an input from the user and prints all of the colors. Jack is still thinking of a logic and whenever the color is red hence he wrote a if condition inside a for loop but the compiler started throwing an error stating that if condition cannot be left empty.

So write a python program to help Jack to keep his if condition empty temporarily and print rest of the colors using a for loo
create a variable named colors and accept input from the users saying "Enter your favorite colors seperated with commas (ex: orange,yellow,red,blue,black,pink...) : " , red should be one of the colors and use .split(",") to split all the entered colors into different items of a list (read Hint 3 for reference)



write for loop with i as a loop variable and instead of anyStr in Hint 2 write as colors
write an if condition to check if the color is red then:
print "Nothing happened when re
below one is second question
"""

def colors():
  colors = input("Enter your favorite colors seperated with commas (ex: orange,yellow,red,blue,black,pink...) : ")
  colors =colors.split(",")
  for i in colors:
    if i == "red":
      print("Nothing happened when red")
    else:
      print(i)
colors()

"""Ms. Edna Francis, science teacher in Wommack High School, conducted an mid-term exam in the class and evaluated the kids marksheets, there are totally 180 students in the class and its hard for Ms. Edna Francis to perform the following operations :
1) Store marks in one place

2) know the marks of the kids based on there roll number starting from 0th Roll Number Student

3) Find the Maximum Marks Scored out of all marks entered

4) Find the Minimum Marks Scored out of all marks entered

5) Get the Top 3 Students who scored top 3 marks and Bottom 3 students who scored less marks so that she can pair them up such that the toppers can help the weak kids to make them better

6) Now marks are highly confidential hence no one should be enter any other data into the records where marks are stored hence the records once created should not be able to modify and if anyone tries to add anything then throw an error

For implementation purpose lets take some 1
ask the user to choose any one option from the options specified in the description by printing them
make use of the if-else conditions and perform the actions accordingly

"""

marks = (45, 67, 89, 78, 90, 56, 34, 76, 88, 99, 59, 68, 77, 55, 44, 88, 93, 92, 39, 82)
def get_marks_by_roll():
    roll_number = int(input("Enter roll number (0 to {}): ".format(len(marks)-1)))
    if 0 <= roll_number < len(marks):
        print("Marks of student {}: {}".format(roll_number, marks[roll_number]))
    else:
        print("Invalid roll number")
def get_max_marks():
    print("Highest marks: {}".format(max(marks)))
def get_min_marks():
    print("Lowest marks: {}".format(min(marks)))
def get_top_and_bottom():
    sorted_marks = sorted(marks, reverse=True)
    print("Top 3 marks: {}".format(sorted_marks[:3]))
    print("Bottom 3 marks: {}".format(sorted_marks[-3:]))

def main():
    while True:
        print("\n1. Get marks by roll number")
        print("2. Find highest marks")
        print("3. Find lowest marks")
        print("4. Get top 3 and bottom 3")
        print("5. Exit")
        choice = input("Choose an option (1-5):")
        if choice == '1':
            get_marks_by_roll()
        elif choice == '2':
            get_max_marks()
        elif choice == '3':
            get_min_marks()
        elif choice == '4':
            get_top_and_bottom()
        elif choice == '5':
            break
        else:
            print("Invalid option")

main()